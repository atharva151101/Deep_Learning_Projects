
torch.Size([1, 1]) torch.Size([1])
Traceback (most recent call last):
  File "train.py", line 117, in <module>
    train_one_epoch(model, trainloader, optimizer,
  File "train.py", line 47, in train_one_epoch
    loss = criterion(output.squeeze(), target)
  File "/Users/tanay/opt/anaconda3/envs/pytorch_x86/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1051, in _call_impl
    return forward_call(*input, **kwargs)
  File "/Users/tanay/opt/anaconda3/envs/pytorch_x86/lib/python3.8/site-packages/torch/nn/modules/loss.py", line 1120, in forward
    return F.cross_entropy(input, target, weight=self.weight,
  File "/Users/tanay/opt/anaconda3/envs/pytorch_x86/lib/python3.8/site-packages/torch/nn/functional.py", line 2824, in cross_entropy
    return torch._C._nn.cross_entropy_loss(input, target, weight, _Reduction.get_enum(reduction), ignore_index)
IndexError: Dimension out of range (expected to be in range of [-1, 0], but got 1)